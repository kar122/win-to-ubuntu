{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "clusterResourceName":{
         "type":"string",
         "metadata":{
            "description":"The name of the AKS cluster."
         }
      },
      "createNewCluster":{
         "type":"Bool",
         "defaultValue":true,
         "metadata":{
            "description":"When set to 'true', creates new AKS cluster. Otherwise, an existing cluster is used."
         }
      },
      "aksDnsPrefix":{
         "type":"string",
         "defaultValue":"[concat(parameters('clusterResourceName'),'-dns')]",
         "metadata":{
            "description":"The DNS prefix to use with the AKS cluster."
         }
      },
      "aksServicePrincipalClientId":{
         "type":"string",
         "defaultValue":"[newGuid()]",
         "metadata":{
            "description":"The client ID of the service principal used by the AKS cluster."
         }
      },
      "aksServicePrincipalClientSecret":{
         "type":"string", 
         "defaultValue":"[newGuid()]",
         "metadata":{
            "description":"The client secret of the service principal used by the AKS cluster."
         }
      },
      "vmSize":{
         "type":"String",
         "defaultValue":"Standard_DS2_v2",
         "metadata":{
            "description":"VM size"
         }
      },
      "nodeVmSize":{
         "type":"string",
         "defaultValue":"Standard_D2s_v3",
         "allowedValues":[
            "Standard_D2s_v3",
            "Standard_D4s_v3",
            "Standard_D8s_v3"
         ],
         "metadata":{
            "description":"The VM size for the agent nodes in the AKS cluster."
         }
      },
      "kubernetesVersion":{
         "type":"String",
         "defaultValue":"1.26.0",
         "metadata":{
            "description":"The version of Kubernetes."
         }
      },
      "vmEnableAutoScale":{
         "type":"Bool",
         "defaultValue":true,
         "metadata":{
            "description":"enable auto scaling"
         }
      },
      "vmCount":{
         "type":"Int",
         "defaultValue":3,
         "metadata":{
            "description":"VM count"
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "metadata":{
            "description":"The location where the resources will be created."
         }
      }
   },
   "variables":{
      "clusterResourceName":"[parameters('clusterResourceName')]",
      "kubernetesVersion":"[parameters('kubernetesVersion')]",
      "vmEnableAutoScale":"[parameters('vmEnableAutoScale')]",
      "vmCount":"[parameters('vmCount')]"
   },
   "resources":[
      {
         "apiVersion":"2022-09-01",
         "type":"Microsoft.ContainerService/managedClusters",
         "location":"[parameters('location')]",
         "condition":"[parameters('createNewCluster')]",
         "name":"[variables('clusterResourceName')]",
         "properties":{
            "dnsPrefix":"[parameters('aksDnsPrefix')]",
            "kubernetesVersion":"[variables('kubernetesVersion')]",
            "servicePrincipalProfile":{
               "clientId":"[parameters('aksServicePrincipalClientId')]",
               "secret":"[parameters('aksServicePrincipalClientSecret')]"
            },
            "agentPoolProfiles":[
               {
                  "name":"nodepool1",
                  "count":"[variables('vmCount')]",
                  "vmSize":"[parameters('nodeVmSize')]",
                  "enableAutoScaling":"[variables('vmEnableAutoScale')]",
                  "osType":"Linux",
                  "minCount":1,
                  "maxCount":10,
                  "maxPods":110,
                  "vnetSubnetId":"[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'default')]"
               },
               {
                  "name":"systempool",
                  "count":1,
                  "vmSize":"[parameters('vmSize')]",
                  "osType":"Linux",
                  "storageProfile":"ManagedDisks",
                  "vnetSubnetId":"[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'default')]",
                  "maxPods":110,
                  "type":"VirtualMachineScaleSets",
                  "mode":"System"
               }
            ],
            "networkProfile":{
               "networkPlugin":"azure",
               "podCidr":"10.244.0.0/16",
               "serviceCidr":"10.0.0.0/16",
               "dnsServiceIp":"10.0.0.10",
               "dockerBridgeCidr":"172.17.0.1/16"
            }
         }
      }
   ],
   "outputs":{}
}
